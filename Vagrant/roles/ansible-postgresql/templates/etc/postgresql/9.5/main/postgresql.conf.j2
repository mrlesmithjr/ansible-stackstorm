#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------
data_directory = '{{ postgresql_data_dir }}'
external_pid_file = '{{ postgresql_external_pid_file }}'
hba_file = '{{ postgresql_hba_file }}'
ident_file = '{{ postgresql_ident_file }}'

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------
{% if postgresql_enable_bonjour %}
bonjour = on
bonjour_name = {{ ansible_hostname }}
{% endif %}
listen_addresses = '{{ postgresql_listen_addresses|join(',') }}'
max_connections = {{ postgresql_max_connections }}
port = {{ postgresql_listen_port }}
{% if postgresql_enable_ssl %}
ssl = true
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
{% endif %}
unix_socket_directories = '{{ postgresql_unix_socket_directories|join(',') }}'

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------
dynamic_shared_memory_type = {{ postgresql_dynamic_shared_memory_type }}
shared_buffers = {{ postgresql_shared_buffers }}
max_prepared_transactions = {{ postgresql_max_prepared_transactions }}

#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------
wal_buffers = {{ postgresql_wal_buffers }}
wal_compression = {{ postgresql_wal_compression }}

# - Checkpoints -

max_wal_size = {{ postgresql_max_wal_size }}
min_wal_size = {{ postgresql_min_wal_size }}

{% if postgresql_enable_replication %}
#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------
{%   if inventory_hostname == postgresql_replication['master'] %}
wal_level = hot_standby
max_wal_senders = 8
max_wal_size = 1GB
{%   elif inventory_hostname != postgresql_replication['master'] %}
hot_standby = on
{%   endif %}
{% endif %}
